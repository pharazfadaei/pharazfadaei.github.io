{"version":3,"sources":["webpack:///./src/components/postLayout/postLayoutArticle.tsx","webpack:///./src/components/postLayout/postLayoutComments.tsx","webpack:///./src/components/postLayout/postLayoutSocial/postLayoutSocialLink.tsx","webpack:///./src/components/postLayout/postLayoutSocial/postLayoutSocial.tsx","webpack:///./src/components/postLayout/postLayoutNavigation/postLayoutNavigationItem.tsx","webpack:///./src/components/postLayout/postLayoutNavigation/postLayoutNavigation.tsx","webpack:///./src/components/postLayout/postLayout.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["PostLayoutArticle","meta","React","useContext","MdxContext","id","title","className","displayName","PostLayoutComments","siteMetadata","SiteContext","siteUrl","disqusShortname","url","disqusConfig","Url","resolve","identifier","DiscussionEmbed","shortname","config","PostLayoutSocialLink","name","label","link","symbolName","href","target","rel","aria-label","PostLayoutSocial","location","useLocation","pageUrl","encodeURIComponent","pathname","pageTitle","PostLayoutNavigationItem","mdx","Utils","SafeMetadataFromMdx","dateFormatted","aria-hidden","to","PostLayoutNavigation","previousMdx","nextMdx","role","PostLayout","data","Error","mdxMeta","mdxContext","type","description","excerpt","imageUrl","image","publicURL","undefined","categories","tags","date","lastModified","Provider","value","postMdxFragment","siblingPostMdxFragment","pageQuery","createHTML","this"],"mappings":"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","file":"component---src-components-post-layout-post-layout-tsx-23ec4712df803984b832.js","sourcesContent":["import React from 'react';\n\nimport MdxArticle from '../mdxArticle';\nimport MdxContext from '../mdxContext';\n\ntype PostLayoutArticleProps = {\n  children?: never;\n};\n\nconst PostLayoutArticle: React.FunctionComponent<PostLayoutArticleProps> = () => {\n  const { meta } = React.useContext(MdxContext);\n\n  const { id, title } = meta;\n\n  return (\n    <article id={`post${id}`} className={`post post${id}`}>\n      <header className=\"post-header\">\n        <h1 className=\"post-title\">{title}</h1>\n      </header>\n\n      <MdxArticle />\n    </article>\n  );\n};\n\nPostLayoutArticle.displayName = 'PostLayoutArticle';\n\nexport default PostLayoutArticle;\n","import React from 'react';\nimport Disqus from 'disqus-react';\nimport Url from 'url';\n\nimport SiteContext from '../siteContext';\nimport MdxContext from '../mdxContext';\n\ntype PostLayoutCommentsProps = {};\n\nconst PostLayoutComments: React.FunctionComponent<PostLayoutCommentsProps> = () => {\n  const { siteMetadata } = React.useContext(SiteContext);\n  const { meta } = React.useContext(MdxContext);\n\n  if (!siteMetadata) return null;\n\n  const { siteUrl, disqusShortname } = siteMetadata;\n  const { title, url } = meta;\n\n  if (!disqusShortname) return null;\n\n  const disqusConfig = {\n    url: Url.resolve(siteUrl, url),\n    identifier: '',\n    title,\n  };\n\n  return <Disqus.DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />;\n};\n\nPostLayoutComments.displayName = 'PostLayoutComments';\n\nexport default PostLayoutComments;\n","import React from 'react';\n\nimport FontAwesomeSymbol from '../../fontAwesomeSymbol';\nimport { FontAwesome } from '../../../utils';\n\ntype PostLayoutSocialLinkProps = {\n  name: string;\n  label: string;\n  link: string;\n  symbolName: FontAwesome.SymbolNames;\n};\n\nconst PostLayoutSocialLink: React.FunctionComponent<PostLayoutSocialLinkProps> = ({ name, label, link, symbolName }) => (\n  <a className=\"post-social-item\" href={link} target=\"_blank\" rel=\"noopener noreferrer\" aria-label={label} title={label}>\n    <FontAwesomeSymbol symbolName={symbolName} />\n    <span>{name}</span>\n  </a>\n);\n\nPostLayoutSocialLink.displayName = 'PostLayoutSocialLink';\n\nexport default PostLayoutSocialLink;\n","import React from 'react';\nimport { useLocation } from '@reach/router';\nimport Url from 'url';\n\nimport PostLayoutSocialLink from './postLayoutSocialLink';\nimport SiteContext from '../../siteContext';\nimport MdxContext from '../../mdxContext';\n\ntype PostLayoutSocialProps = {};\n\nconst PostLayoutSocial: React.FunctionComponent<PostLayoutSocialProps> = () => {\n  const { siteMetadata } = React.useContext(SiteContext);\n  const { meta } = React.useContext(MdxContext);\n  const location = useLocation();\n\n  if (!siteMetadata) return null;\n\n  const { siteUrl } = siteMetadata;\n\n  const pageUrl = encodeURIComponent(Url.resolve(siteUrl, location.pathname));\n  const pageTitle = encodeURIComponent(meta.title);\n\n  return (\n    <section className=\"post-social\">\n      <PostLayoutSocialLink name=\"Facebook\" symbolName=\"share-facebook\" link={`https://facebook.com/sharer/sharer.php?u=${pageUrl}`} label=\"Share on Facebook\" />\n      <PostLayoutSocialLink name=\"Twitter\" symbolName=\"share-twitter\" link={`https://twitter.com/intent/tweet/?text=${pageTitle}&url=${pageUrl}`} label=\"Share on Twitter\" />\n      <PostLayoutSocialLink name=\"LinkedIn\" symbolName=\"share-linkedin\" link={`https://www.linkedin.com/shareArticle?mini=true&url=${pageUrl}&title=${pageTitle}&summary=${pageTitle}&source=${pageUrl}`} label=\"Share on LinkedIn\" />\n      <PostLayoutSocialLink name=\"WhatsApp\" symbolName=\"share-whatsapp\" link={`whatsapp://send?text=${pageTitle}%20${pageUrl}`} label=\"Share on WhatsApp\" />\n      <PostLayoutSocialLink name=\"E-Mail\" symbolName=\"share-email\" link={`mailto:?subject=${pageTitle}&body=${pageUrl}`} label=\"Share by E-Mail\" />\n    </section>\n  );\n};\n\nPostLayoutSocial.displayName = 'PostLayoutSocial';\n\nexport default PostLayoutSocial;\n","import React from 'react';\n\nimport Link from '../../link';\nimport { Utils, GraphQl } from '../../../utils';\n\ntype PostLayoutNavigationItemProps = {\n  label: string;\n  mdx: GraphQl.SiblingPostMdxFragment;\n  children?: never;\n};\n\nconst PostLayoutNavigationItem: React.FunctionComponent<PostLayoutNavigationItemProps> = ({ label, mdx }) => {\n  const { title, url, dateFormatted } = Utils.SafeMetadataFromMdx(mdx);\n\n  return (\n    <>\n      <h2 aria-hidden=\"true\">{label}</h2>\n      <span className=\"screen-reader-text\">{`${label} post:`}</span>\n      <h3 className=\"post-entry\">\n        <Link to={url} title={`${label} Post: ${title}`}>\n          {title} <small>{dateFormatted}</small>\n        </Link>\n      </h3>\n    </>\n  );\n};\n\nPostLayoutNavigationItem.displayName = 'PostLayoutNavigationItem';\n\nexport default PostLayoutNavigationItem;\n","import React from 'react';\n\nimport PostLayoutNavigationItem from './postLayoutNavigationItem';\nimport { GraphQl } from '../../../utils';\n\ntype PostLayoutNavigationProps = {\n  previousMdx?: GraphQl.SiblingPostMdxFragment;\n  nextMdx?: GraphQl.SiblingPostMdxFragment;\n  children?: never;\n};\n\nconst PostLayoutNavigation: React.FunctionComponent<PostLayoutNavigationProps> = ({ previousMdx, nextMdx }) => {\n  if (!previousMdx && !nextMdx) return null;\n\n  return (\n    <nav className=\"post-navigation\" role=\"navigation\">\n      {previousMdx && <PostLayoutNavigationItem label=\"Previous\" mdx={previousMdx} />}\n      {nextMdx && <PostLayoutNavigationItem label=\"Next\" mdx={nextMdx} />}\n    </nav>\n  );\n};\n\nPostLayoutNavigation.displayName = 'PostLayoutNavigation';\n\nexport default PostLayoutNavigation;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Head from '../head';\nimport PostLayoutArticle from './postLayoutArticle';\nimport PostLayoutComments from './postLayoutComments';\nimport PostLayoutSocial from './postLayoutSocial/postLayoutSocial';\nimport PostLayoutAuthor from './postLayoutAuthor';\nimport PostLayoutNavigation from './postLayoutNavigation';\nimport MdxContext from '../mdxContext';\nimport { GraphQl, Utils } from '../../utils/';\n\ntype PostLayoutProps = {\n  data: GraphQl.PostLayoutQuery;\n};\n\nconst PostLayout: React.FunctionComponent<PostLayoutProps> = ({ data }) => {\n  const { mdx, previousMdx, nextMdx } = data;\n\n  if (!mdx) throw Error('Mdx expected!');\n\n  const mdxMeta = Utils.SafeMetadataFromMdx(mdx);\n\n  const mdxContext = {\n    mdx,\n    meta: mdxMeta,\n  };\n\n  return (\n    <>\n      <Head\n        type=\"post\"\n        title={mdxMeta.title}\n        description={mdxMeta.excerpt}\n        imageUrl={mdxMeta.image?.publicURL ?? undefined}\n        categories={mdxMeta.categories}\n        tags={mdxMeta.tags}\n        date={mdxMeta.date}\n        lastModified={mdxMeta.lastModified}\n      />\n\n      <MdxContext.Provider value={mdxContext}>\n        <main role=\"main\" id=\"main\">\n          <PostLayoutArticle />\n\n          <PostLayoutSocial />\n\n          <PostLayoutComments />\n\n          <PostLayoutNavigation previousMdx={previousMdx ?? undefined} nextMdx={nextMdx ?? undefined} />\n        </main>\n      </MdxContext.Provider>\n    </>\n  );\n};\n\nPostLayout.displayName = 'PostLayout';\n\nexport const postMdxFragment = graphql`\n  fragment PostMdx on Mdx {\n    id\n    body\n    excerpt(pruneLength: 250)\n    fields {\n      slug\n    }\n    frontmatter {\n      categories\n      date\n      dateFormatted\n      image {\n        childImageSharp {\n          fluid(maxWidth: 720) {\n            ...GatsbyImageSharpFluid_withWebp\n            presentationWidth\n          }\n        }\n        publicURL\n      }\n      last_modified_at\n      layout\n      tags\n      title\n    }\n    file: parent {\n      ... on File {\n        base\n      }\n    }\n  }\n`;\n\nexport const siblingPostMdxFragment = graphql`\n  fragment SiblingPostMdx on Mdx {\n    id\n    fields {\n      slug\n    }\n    frontmatter {\n      dateFormatted\n      title\n    }\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostLayout($id: String!, $previousId: String, $nextId: String) {\n    mdx(id: { eq: $id }) {\n      ...PostMdx\n    }\n    previousMdx: mdx(id: { eq: $previousId }) {\n      ...SiblingPostMdx\n    }\n    nextMdx: mdx(id: { eq: $nextId }) {\n      ...SiblingPostMdx\n    }\n  }\n`;\n\nexport default PostLayout;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}