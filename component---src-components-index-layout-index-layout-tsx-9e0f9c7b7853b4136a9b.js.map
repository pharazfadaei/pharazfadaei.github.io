{"version":3,"sources":["webpack:///./src/components/indexLayout/indexLayoutPosts.tsx","webpack:///./src/components/indexLayout/indexLayoutNavigation.tsx","webpack:///./src/components/indexLayout/indexLayout.tsx"],"names":["IndexLayoutPosts","posts","data","allMdx","edges","map","index","node","mdxMeta","Utils","SafeMetadataFromMdx","id","title","url","mdxContext","mdx","meta","Provider","value","key","className","to","rel","displayName","IndexLayoutNavigation","nextPageIndex","previousPageIndex","IndexLayout","pageContext","type"],"mappings":"0LAWMA,EAAmE,SAAC,GAAa,IAC/EC,EAD+E,EAAXC,KACvDC,OAAOC,MAE1B,OAAKH,EAGH,oCACGA,EAAMI,KAAI,WAAWC,GAAU,IAAlBC,EAAkB,EAAlBA,KACNC,EAAUC,IAAMC,oBAAoBH,GAClCI,EAAmBH,EAAnBG,GAAIC,EAAeJ,EAAfI,MAAOC,EAAQL,EAARK,IAEbC,EAAa,CACjBC,IAAKR,EACLS,KAAMR,GAGR,OACE,kBAAC,IAAWS,SAAZ,CAAqBC,MAAOJ,EAAYK,IAAKb,GAC3C,6BAASK,GAAE,OAASA,EAAMS,UAAS,YAAcT,GAC/C,4BAAQS,UAAU,eAChB,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAIR,EAAKS,IAAI,YAChBV,KAKP,kBAAC,IAAD,YAxBO,MAiCrBZ,EAAiBuB,YAAc,mBAEhBvB,QCxCTwB,EAA6E,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,kBAAlB,OACjF,yBAAKN,UAAU,cACZK,EACC,kBAAC,IAAD,CAAML,UAAU,wBAAwBC,GAAE,SAAWI,EAAX,KAA1C,SAIA,0BAAML,UAAU,yBAAhB,SAEDM,EACC,kBAAC,IAAD,CAAMN,UAAU,wBAAwBC,GAA0B,IAAtBK,EAA0B,IAA1B,SAAyCA,EAAzC,KAA5C,SAIA,0BAAMN,UAAU,yBAAhB,WAKNI,EAAsBD,YAAc,wBAErBC,QCdTG,EAAyD,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAM0B,EAAT,EAASA,YAAT,OAC7D,oCACE,kBAAC,IAAD,CAAMC,KAAK,UAEX,kBAAC,EAAD,CAAkB3B,KAAMA,IAExB,kBAAC,EAAD,CAAuBwB,kBAAmBE,EAAYF,kBAAmBD,cAAeG,EAAYH,kBAIxGE,EAAYJ,YAAc,cAcXI","file":"component---src-components-index-layout-index-layout-tsx-9e0f9c7b7853b4136a9b.js","sourcesContent":["import React from 'react';\n\nimport MdxArticle from '../mdxArticle';\nimport Link from '../link';\nimport MdxContext from '../mdxContext';\nimport { GraphQl, Utils } from '../../utils';\n\ntype IndexLayoutPostsProps = {\n  data: GraphQl.IndexLayoutQuery;\n};\n\nconst IndexLayoutPosts: React.FunctionComponent<IndexLayoutPostsProps> = ({ data }) => {\n  const posts = data.allMdx.edges;\n\n  if (!posts) return null;\n\n  return (\n    <>\n      {posts.map(({ node }, index) => {\n        const mdxMeta = Utils.SafeMetadataFromMdx(node);\n        const { id, title, url } = mdxMeta;\n\n        const mdxContext = {\n          mdx: node,\n          meta: mdxMeta,\n        };\n\n        return (\n          <MdxContext.Provider value={mdxContext} key={index}>\n            <article id={`post${id}`} className={`post post${id}`}>\n              <header className=\"post-header\">\n                <h1 className=\"post-title\">\n                  <Link to={url} rel=\"bookmark\">\n                    {title}\n                  </Link>\n                </h1>\n              </header>\n\n              <MdxArticle />\n            </article>\n          </MdxContext.Provider>\n        );\n      })}\n    </>\n  );\n};\n\nIndexLayoutPosts.displayName = 'IndexLayoutPosts';\n\nexport default IndexLayoutPosts;\n","import React from 'react';\n\nimport Link from '../link';\n\ntype IndexLayoutNavigationProps = {\n  previousPageIndex?: number;\n  nextPageIndex?: number;\n};\n\nconst IndexLayoutNavigation: React.FunctionComponent<IndexLayoutNavigationProps> = ({ nextPageIndex, previousPageIndex }) => (\n  <nav className=\"pagination\">\n    {nextPageIndex ? (\n      <Link className=\"pagination-item older\" to={`/page/${nextPageIndex}/`}>\n        Older\n      </Link>\n    ) : (\n      <span className=\"pagination-item older\">Older</span>\n    )}\n    {previousPageIndex ? (\n      <Link className=\"pagination-item newer\" to={previousPageIndex === 1 ? '/' : `/page/${previousPageIndex}/`}>\n        Newer\n      </Link>\n    ) : (\n      <span className=\"pagination-item newer\">Newer</span>\n    )}\n  </nav>\n);\n\nIndexLayoutNavigation.displayName = 'IndexLayoutNavigation';\n\nexport default IndexLayoutNavigation;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Head from '../head';\nimport IndexLayoutPosts from './indexLayoutPosts';\nimport IndexLayoutNavigation from './indexLayoutNavigation';\nimport { GraphQl } from '../../utils';\n\ntype IndexLayoutProps = {\n  data: GraphQl.IndexLayoutQuery;\n  pageContext: {\n    previousPageIndex?: number;\n    nextPageIndex?: number;\n  };\n};\n\nconst IndexLayout: React.FunctionComponent<IndexLayoutProps> = ({ data, pageContext }) => (\n  <>\n    <Head type=\"index\" />\n\n    <IndexLayoutPosts data={data} />\n\n    <IndexLayoutNavigation previousPageIndex={pageContext.previousPageIndex} nextPageIndex={pageContext.nextPageIndex} />\n  </>\n);\n\nIndexLayout.displayName = 'IndexLayout';\n\nexport const pageQuery = graphql`\n  query IndexLayout($ids: [String!]!) {\n    allMdx(filter: { id: { in: $ids } }, sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          ...PostMdx\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexLayout;\n"],"sourceRoot":""}